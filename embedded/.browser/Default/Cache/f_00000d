{"availableCount":77,"searchTerms":[],"userState":"b17fba28-d3b2-4cc7-9f95-e3746c45fcd1","resources":[{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"Standalone Bootloader using the BGAPI protocol for UART DFU. This is the recommended UART bootloader for the BLE protocol stack.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.bootloader-uart-bgapi.sample-apps/bootloader-uart-bgapi/bootloader-uart-bgapi.slcp","text":"BGAPI UART DFU Bootloader","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the BGAPI protocol for UART DFU. This is the recommended UART bootloader for the BLE protocol stack.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/ncp/readme.md"],"description":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack and provides access to it by exposing the Bluetooth API (BGAPI) via UART connection. NCP mode makes it possible to run your application on a host controller or PC. This example does not have a GATT database, but makes it possible to build one from the application using Dynamic GATT API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.ncp.example/ncp/ncp.slcp","text":"Bluetooth - NCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack and provides access to it by exposing the Bluetooth API (BGAPI) via UART connection. NCP mode makes it possible to run your application on a host controller or PC. This example does not have a GATT database, but makes it possible to build one from the application using Dynamic GATT API.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/ncp_empty/readme.md"],"description":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack and provides access to it by exposing the Bluetooth API (BGAPI) via UART connection. NCP mode makes it possible to run your application on a host controller or PC. This example contains a minimal GATT database, and cannot be used with host applications that use Dynamic GATT API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.ncp_empty.example/ncp_empty/ncp_empty.slcp","text":"Bluetooth - NCP Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack and provides access to it by exposing the Bluetooth API (BGAPI) via UART connection. NCP mode makes it possible to run your application on a host controller or PC. This example contains a minimal GATT database, and cannot be used with host applications that use Dynamic GATT API.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/ncp_host/readme.md"],"description":"Reference implementation of an NCP (Network Co-Processor) host, which typically runs on a central MCU without radio. It can connect to an NCP target running the NCP Example via UART to access the Bluetooth stack on the target and to control it using BGAPI. This example uses the Dynamic GATT feature.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.ncp_host.example/ncp_host/ncp_host.slcp","text":"Bluetooth - NCP Host","priority":9999999,"category":"SOFTWARE","toolTipText":"Reference implementation of an NCP (Network Co-Processor) host, which typically runs on a central MCU without radio. It can connect to an NCP target running the NCP Example via UART to access the Bluetooth stack on the target and to control it using BGAPI. This example uses the Dynamic GATT feature.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/rcp/readme.md"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.rcp.example/rcp/rcp.slcp","text":"Bluetooth - RCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/rcp_cpc/readme.md"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over CPC (Co-Processor Communication) protocol through UART connection.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.rcp_cpc.example/rcp/rcp_cpc.slcp","text":"Bluetooth - RCP CPC","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over CPC (Co-Processor Communication) protocol through UART connection.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_aoa_asset_tag/readme.md"],"description":"This sample app demonstrates a CTE (Constant Tone Extension) transmitter that can be used as an asset tag in a Direction Finding setup estimating Angle of Arrival (AoA).","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_aoa_asset_tag.example/soc_aoa_asset_tag/soc_aoa_asset_tag.slcp","text":"Bluetooth - SoC AoA Asset Tag","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample app demonstrates a CTE (Constant Tone Extension) transmitter that can be used as an asset tag in a Direction Finding setup estimating Angle of Arrival (AoA)."},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_blinky/readme.md"],"description":"The classic blinky example using Bluetooth communication. From the EFR Connect mobile app, the LED controller button toggles LED0 on the board. In addition, on the board pressing or releasing BTN0 notifies the app. This is a demonstration of a simple two-way data exchange over GATT.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_blinky.example/soc_blinky/soc_blinky.slcp","text":"Bluetooth - SoC Blinky","priority":9999999,"category":"SOFTWARE","toolTipText":"The classic blinky example using Bluetooth communication. From the EFR Connect mobile app, the LED controller button toggles LED0 on the board. In addition, on the board pressing or releasing BTN0 notifies the app. This is a demonstration of a simple two-way data exchange over GATT.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_dtm/readme.md"],"description":"This example implements the direct test mode (DTM) application for radio testing. DTM commands can be called via UART.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_dtm.example/soc_dtm/soc_dtm.slcp","text":"Bluetooth - SoC DTM","priority":9999999,"category":"SOFTWARE","toolTipText":"This example implements the direct test mode (DTM) application for radio testing. DTM commands can be called via UART.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_empty/readme.md"],"description":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. It contains a minimal GATT database that can be expanded to fit your application requirements. The application starts advertising after boot and restarts advertising after a connection is closed. It also supports Over-the-Air Device Firmware Upgrade (OTA DFU).","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_empty.example/soc_empty/soc_empty.slcp","text":"Bluetooth - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. It contains a minimal GATT database that can be expanded to fit your application requirements. The application starts advertising after boot and restarts advertising after a connection is closed. It also supports Over-the-Air Device Firmware Upgrade (OTA DFU).\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_iop_test/readme.md"],"description":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the EFR Connect mobile app, through the \"Interoperability Test\" tile on the Develop view of the app.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_iop_test_log.example/soc_iop_test/soc_iop_test_log.slcp","text":"Bluetooth - SoC Interoperability Test","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the EFR Connect mobile app, through the \"Interoperability Test\" tile on the Develop view of the app.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_thermometer/readme.md"],"description":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the Si7021 digital relative humidity and temperature sensor of the WSTK or of the Thunderboard.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_thermometer.example/soc_thermometer/soc_thermometer.slcp","text":"Bluetooth - SoC Thermometer","priority":9999999,"category":"SOFTWARE","toolTipText":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the Si7021 digital relative humidity and temperature sensor of the WSTK or of the Thunderboard.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_thermometer_client/readme.md"],"description":"Implements a GATT Client that discovers and connects with up to 4 BLE devices advertising themselves as Thermometer Servers. It displays the discovery process and the temperature values received via UART.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_thermometer_client.example/soc_thermometer_client/soc_thermometer_client.slcp","text":"Bluetooth - SoC Thermometer Client","priority":9999999,"category":"SOFTWARE","toolTipText":"Implements a GATT Client that discovers and connects with up to 4 BLE devices advertising themselves as Thermometer Servers. It displays the discovery process and the temperature values received via UART.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"Demonstrates the integration of FreeRTOS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer sample app.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_thermometer_freertos.example/soc_thermometer/soc_thermometer_freertos.slcp","text":"Bluetooth - SoC Thermometer FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the integration of FreeRTOS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer sample app.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_thermometer_rtos/readme.md"],"description":"Demonstrates the integration of Micrium OS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer sample app.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_thermometer_micriumos.example/soc_thermometer/soc_thermometer_micriumos.slcp","text":"Bluetooth - SoC Thermometer Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the integration of Micrium OS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer sample app.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_throughput/readme.md"],"description":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_throughput_log_single.example/soc_throughput/soc_throughput_log_single.slcp","text":"Bluetooth - SoC Throughput","priority":9999999,"category":"SOFTWARE","toolTipText":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_thunderboard/readme.md"],"description":"Demonstrates the features of the Thunderboard EFR32BG22 Kit. This can be tested with the EFR Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_thunderboard_brd4184a.example/soc_thunderboard/soc_thunderboard_brd4184a.slcp","text":"Bluetooth - SoC Thunderboard EFR32BG22 (BRD4184A)","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the features of the Thunderboard EFR32BG22 Kit. This can be tested with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_ibeacon/readme.md"],"description":"An iBeacon device implementation that sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_ibeacon.example/soc_ibeacon/soc_ibeacon.slcp","text":"Bluetooth - SoC iBeacon","priority":9999999,"category":"SOFTWARE","toolTipText":"An iBeacon device implementation that sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/ncp_btmesh_empty/readme.md"],"description":"Bluetooth Mesh NCP (Network Co-Processor) target demonstrates the bare minimum needed for a Bluetooth Mesh NCP Target C application, that makes it possible for the NCP Host Controller to access the Bluetooth Mesh stack via UART. It provides access to the host layer via BGAPI and not to the link layer via HCI. This example is recommended for EFR32xG22 which has  limited RAM and Flash, therefore some of the stack classes are disabled by  default. The required stack class components need to be enabled and the stack parameters need to be configured before use. The communication between the Host Controller and the target can be secured by installing the Secure NCP component. This example requires the BGAPI UART DFU Bootloader.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.ncp_btmesh_empty.example/ncp_btmesh_empty/ncp_btmesh_empty_xg22.slcp","text":"Bluetooth Mesh - NCP Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"Bluetooth Mesh NCP (Network Co-Processor) target demonstrates the bare minimum needed for a Bluetooth Mesh NCP Target C application, that makes it possible for the NCP Host Controller to access the Bluetooth Mesh stack via UART. It provides access to the host layer via BGAPI and not to the link layer via HCI. This example is recommended for EFR32xG22 which has  limited RAM and Flash, therefore some of the stack classes are disabled by  default. The required stack class components need to be enabled and the stack parameters need to be configured before use. The communication between the Host Controller and the target can be secured by installing the Secure NCP component. This example requires the BGAPI UART DFU Bootloader.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_btmesh_empty/readme.md"],"description":"This example demonstrates the bare minimum needed for a Bluetooth Mesh C application that allows Over-the-Air Device Firmware Upgrading (OTA DFU). The application starts Unprovisioned Device Beaconing after boot waiting  to be provisioned to a Mesh Network. This Software Example can be used as  a starting point for an SoC project and it can be customized by adding new components from the Component Browser or by modifying the application  (app.c). This example requires one of the Internal Storage Bootloader (single image) variants depending on device memory.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_btmesh_empty.example/soc_btmesh_empty/soc_btmesh_empty.slcp","text":"Bluetooth Mesh - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates the bare minimum needed for a Bluetooth Mesh C application that allows Over-the-Air Device Firmware Upgrading (OTA DFU). The application starts Unprovisioned Device Beaconing after boot waiting  to be provisioned to a Mesh Network. This Software Example can be used as  a starting point for an SoC project and it can be customized by adding new components from the Component Browser or by modifying the application  (app.c). This example requires one of the Internal Storage Bootloader (single image) variants depending on device memory.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_btmesh_sensor_client/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It  collects and displays sensor measurement data from remote device(s)  (eg soc_btmesh_sensor_server). The current status is displayed on the  LCD and also sent to UART. CLI commands can substitute button presses as on the selected board only one Push Button is wired. This example requires one of the Internal Storage Bootloader (single image) variants depending on device memory.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_btmesh_sensor_client.example/soc_btmesh_sensor_client/soc_btmesh_sensor_client_log_single.slcp","text":"Bluetooth Mesh - SoC Sensor Client","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It  collects and displays sensor measurement data from remote device(s)  (eg soc_btmesh_sensor_server). The current status is displayed on the  LCD and also sent to UART. CLI commands can substitute button presses as on the selected board only one Push Button is wired. This example requires one of the Internal Storage Bootloader (single image) variants depending on device memory.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_btmesh_sensor_server/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Server Model and  Sensor Setup Server Model. It measures temperature, people count and  illuminance and sends the mearurement data to a remote device (eg  soc_btmesh_sensor_client). The current status is sent to UART. CLI  commands can substitute button presses as on the selected board only  one Push Button is available. This example requires Internal Storage  Bootloader (single image on 512kB device).","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_btmesh_sensor_server.example/soc_btmesh_sensor_server/soc_btmesh_sensor_server_tbbg22a.slcp","text":"Bluetooth Mesh - SoC Sensor Server","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Server Model and  Sensor Setup Server Model. It measures temperature, people count and  illuminance and sends the mearurement data to a remote device (eg  soc_btmesh_sensor_client). The current status is sent to UART. CLI  commands can substitute button presses as on the selected board only  one Push Button is available. This example requires Internal Storage  Bootloader (single image on 512kB device).\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_btmesh_switch/readme.md"],"description":"This example is an out-of-the-box Software Demo optimized for user experience where the device acts as a switch. Push Button presses on the development board (only PB0 is functional) or CLI commands can control the state, lightness and color temperature of the LEDs and also scenes on a remote device (soc_btmesh_light). The example also acts as a LPN and tries to establish friendship. The status messages are also sent to UART. The example is based on the Bluetooth Mesh Generic On/Off Client Model, the Light Lightness Client Model, CTL Client Model and Scene Client Model. This example requires one of the Internal Storage Bootloader (single image) variants depending on device memory.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_btmesh_switch.example/soc_btmesh_switch/soc_btmesh_switch_log_single.slcp","text":"Bluetooth Mesh - SoC Switch","priority":9999999,"category":"SOFTWARE","toolTipText":"This example is an out-of-the-box Software Demo optimized for user experience where the device acts as a switch. Push Button presses on the development board (only PB0 is functional) or CLI commands can control the state, lightness and color temperature of the LEDs and also scenes on a remote device (soc_btmesh_light). The example also acts as a LPN and tries to establish friendship. The status messages are also sent to UART. The example is based on the Bluetooth Mesh Generic On/Off Client Model, the Light Lightness Client Model, CTL Client Model and Scene Client Model. This example requires one of the Internal Storage Bootloader (single image) variants depending on device memory.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/documentation/example/soc_btmesh_switch/readme_low_power.md"],"description":"This example is an out-of-the-box Software Demo optimized for low current consumption where the device acts as a switch. It has disabled CLI, logging and LCD. Push Button presses on the development board (only PB0 is functional) can control the state, lightness and color temperature of the LEDs and also scenes on a remote device (soc_btmesh_light). The example also acts as a LPN and tries to establish friendship. The example is based on the Bluetooth Mesh Generic On/Off Client Model, the Light Lightness Client Model, CTL Client Model and Scene Client Model. This example requires one of the Internal Storage Bootloader (single image) variants depending on device memory.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.soc_btmesh_switch_low_power.example/soc_btmesh_switch/soc_btmesh_switch_low_power_single.slcp","text":"Bluetooth Mesh - SoC Switch Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"This example is an out-of-the-box Software Demo optimized for low current consumption where the device acts as a switch. It has disabled CLI, logging and LCD. Push Button presses on the development board (only PB0 is functional) can control the state, lightness and color temperature of the LEDs and also scenes on a remote device (soc_btmesh_light). The example also acts as a LPN and tries to establish friendship. The example is based on the Bluetooth Mesh Generic On/Off Client Model, the Light Lightness Client Model, CTL Client Model and Scene Client Model. This example requires one of the Internal Storage Bootloader (single image) variants depending on device memory.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"Standalone Bootloader using the EZSP protocol over SPI. This is the recommended SPI bootloader for the EmberZNet and Connect protocol stacks.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.bootloader-spi-ezsp.sample-apps/bootloader-spi-ezsp/bootloader-spi-ezsp.slcp","text":"EZSP SPI Bootloader","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the EZSP protocol over SPI. This is the recommended SPI bootloader for the EmberZNet and Connect protocol stacks.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.cExeProject","text":"Empty C Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.cppExeProject","text":"Empty C++ Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/direct_mode_device/readme.md"],"description":"This sample app allows direct commissioning of nodes and exchange data between them via CLI commands.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.direct_mode_device.example/connect/direct_mode_device/direct_mode_device.slcp","text":"Flex (Connect) - SoC Direct Mode Device","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample app allows direct commissioning of nodes and exchange data between them via CLI commands."},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/ecdh_key_exchange/readme.md"],"description":"This sample application illustrates how we could share a network key between two devices in a secure way. The application works via CLI commands which break down the steps to understand and analyze this mechanism.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.ecdh_key_exchange.example/connect/ecdh_key_exchange/ecdh_key_exchange.slcp","text":"Flex (Connect) - SoC ECDH Key Exchange","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample application illustrates how we could share a network key between two devices in a secure way. The application works via CLI commands which break down the steps to understand and analyze this mechanism."},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_empty/readme.md"],"description":"The Connect Empty project is a barebone Connect app that can be a basis of streamlined proprietary solutions.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.connect_empty.example/connect/connect_empty/connect_empty.slcp","text":"Flex (Connect) - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"The Connect Empty project is a barebone Connect app that can be a basis of streamlined proprietary solutions."},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/mac_mode_device/readme.md"],"description":"A 802.15.4 sample app that provides CLI commands to form a network or join an existing network, send data to another node based on short or long addresses.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.mac_mode_device.example/connect/mac_mode_device/mac_mode_device.slcp","text":"Flex (Connect) - SoC MAC Mode Device","priority":9999999,"category":"SOFTWARE","toolTipText":"A 802.15.4 sample app that provides CLI commands to form a network or join an existing network, send data to another node based on short or long addresses."},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_sink_sensor/readme.md"],"description":"Demonstrates how to properly setup a star network topology in which communication occurs in both directions between the Sink and the Sensor(s) nodes. The PB0 pushbutton can be used to enable or disable sleep, combined with changing the VCOM option 'Enable reception when sleeping'.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.sensor.example/connect/sensor_sink/sensor/sensor.slcp","text":"Flex (Connect) - SoC Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates how to properly setup a star network topology in which communication occurs in both directions between the Sink and the Sensor(s) nodes. The PB0 pushbutton can be used to enable or disable sleep, combined with changing the VCOM option 'Enable reception when sleeping'."},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_sink_sensor/readme.md"],"description":"The Sink example is the counterpart of the Sensor example. It receives reports of Sensor nodes joining to its network.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.sink.example/connect/sensor_sink/sink/sink.slcp","text":"Flex (Connect) - SoC Sink","priority":9999999,"category":"SOFTWARE","toolTipText":"The Sink example is the counterpart of the Sensor example. It receives reports of Sensor nodes joining to its network."},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_empty/readme.md"],"description":"The RAIL Empty project is a barebone RAIL app that can be a basis of a proprietary solutions. This comes prepared with a Single PHY radio configurator and a basic callback function for RAIL. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.rail_empty.example/rail/rail_empty/rail_empty.slcp","text":"Flex (RAIL) - Empty Example","priority":9999999,"category":"SOFTWARE","toolTipText":"The RAIL Empty project is a barebone RAIL app that can be a basis of a proprietary solutions. This comes prepared with a Single PHY radio configurator and a basic callback function for RAIL. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported."},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/emode/readme.md"],"description":"This is a customizable Energy Mode sample application. To control the sample app please use the CLI interface over UART. Through CLI you can change the energy mode during different task of the sample app, like idle, sending or receiving. To get started send the 'help' command over CLI. To enter in Idle mode with different energy levels send 'idle x' where x stand for a number corresponding for an energy mode (0:empty loop, 1:EM1, 2:EM2, 3:EM3). To test the TX function you can use 'cw x', this will set the radio into Continuous Wave mode with selected energy level. 'periodic_tx us x' command also useful to test TX function with packets, it will send packets with us microseconds delays, and return into selected x energy mode after it. To test RX functions use 'rx x' or 'periodic_rx us_delay us_rx x' where x is the energy level, us_delay is the periodic delay between RX in microseconds, and us_rx is the length of the RX on in microseconds. To set or get TX power level use 'set_power d_dbm' or 'get_power' where d_dbm stands for the deci-dBm value to set the power level to. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. Note: Due to the higher current consumption of the continuous radio usage, it is recommended to power the board over USB instead of coin cell.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.emode.example/rail/emode/emode.slcp","text":"Flex (RAIL) - Energy Mode","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a customizable Energy Mode sample application. To control the sample app please use the CLI interface over UART. Through CLI you can change the energy mode during different task of the sample app, like idle, sending or receiving. To get started send the 'help' command over CLI. To enter in Idle mode with different energy levels send 'idle x' where x stand for a number corresponding for an energy mode (0:empty loop, 1:EM1, 2:EM2, 3:EM3). To test the TX function you can use 'cw x', this will set the radio into Continuous Wave mode with selected energy level. 'periodic_tx us x' command also useful to test TX function with packets, it will send packets with us microseconds delays, and return into selected x energy mode after it. To test RX functions use 'rx x' or 'periodic_rx us_delay us_rx x' where x is the energy level, us_delay is the periodic delay between RX in microseconds, and us_rx is the length of the RX on in microseconds. To set or get TX power level use 'set_power d_dbm' or 'get_power' where d_dbm stands for the deci-dBm value to set the power level to. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. Note: Due to the higher current consumption of the continuous radio usage, it is recommended to power the board over USB instead of coin cell."},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/railtest/readme.md"],"description":"The RAILtest application (RAILtest) provides a simple tool for testing the radio and the functionality of the RAIL library via CLI. For more advanced usage, developers must write software against the RAIL library and create a custom radio configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.railtest.example/rail/railtest/railtest.slcp","text":"Flex (RAIL) - RAILtest","priority":9999999,"category":"SOFTWARE","toolTipText":"The RAILtest application (RAILtest) provides a simple tool for testing the radio and the functionality of the RAIL library via CLI. For more advanced usage, developers must write software against the RAIL library and create a custom radio configuration."},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x28000 (or 0x8028000 for device with 0x8000000 flash base), and have a size of 120 kB. This can be configured on the \"Storage\" tab. This sample configuration works out-of-the-box with the \"Local Storage Bootloader\" option in Silicon Labs EmberZNet Application Builder projects as well as Bluetooth and Connect projects. The configuration is designed to be safe to use together with applications that use SimEE1, SimEE2, NVM3 or PStore as their NVM system. When changing the storage layout of the bootloader, take care to ensure that there is no overlap between the memory space the bootloader expects to use, and the memory space the application or NVM system expects to use. Note: This sample configuration will not use all available flash space for bootloader storage. As the memory layout may differ between different application projects, this bootloader project has a safe configuration that ensures that it doesn't overlap with any application sample configuration. This comes at the expense of leaving some unused flash space. Always make sure to configure your bootloader to use the same area for storage as is set aside by your application. If support for multiple storage slots is desired, the start address of the storage, configurable under \"Software Components->Platform->Bootloader->Storage->Bootloader Storage Slot Setup\", *must* be configured to provide the location for \"bootload info\", which is meta-information about the storage slots to tell the bootloader which storage slot to install the next firmware update from. See the \"Internal Storage Bootloader (multiple images)\" sample configuration for more information. See UG489: Gecko Bootloader User's Guide to learn more about how to configure the bootloader, configure storage layout, enable security features, etc.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.bootloader-storage-internal-single-352k.sample-apps/bootloader-storage-internal-single-352k/bootloader-storage-internal-single-352k.slcp","text":"Internal Storage Bootloader (single image on 352kB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x28000 (or 0x8028000 for device with 0x8000000 flash base), and have a size of 120 kB. This can be configured on the \"Storage\" tab.\nThis sample configuration works out-of-the-box with the \"Local Storage Bootloader\" option in Silicon Labs EmberZNet Application Builder projects as well as Bluetooth and Connect projects. The configuration is designed to be safe to use together with applications that use SimEE1, SimEE2, NVM3 or PStore as their NVM system. When changing the storage layout of the bootloader, take care to ensure that there is no overlap between the memory space the bootloader expects to use, and the memory space the application or NVM system expects to use.\nNote: This sample configuration will not use all available flash space for bootloader storage. As the memory layout may differ between different application projects, this bootloader project has a safe configuration that ensures that it doesn't overlap with any application sample configuration. This comes at the expense of leaving some unused flash space. Always make sure to configure your bootloader to use the same area for storage as is set aside by your application.\nIf support for multiple storage slots is desired, the start address of the storage, configurable under \"Software Components->Platform->Bootloader->Storage->Bootloader Storage Slot Setup\", *must* be configured to provide the location for \"bootload info\", which is meta-information about the storage slots to tell the bootloader which storage slot to install the next firmware update from. See the \"Internal Storage Bootloader (multiple images)\" sample configuration for more information.\nSee UG489: Gecko Bootloader User's Guide to learn more about how to configure the bootloader, configure storage layout, enable security features, etc.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x44000 (or 0x8044000 for device with 0x8000000 flash base), and have a size of 192 kB. This can be configured on the \"Storage\" tab. This sample configuration works out-of-the-box with the \"Local Storage Bootloader\" option in Silicon Labs EmberZNet Application Builder projects as well as Bluetooth and Connect projects. The configuration is designed to be safe to use together with applications that use SimEE1, SimEE2, NVM3 or PStore as their NVM system. When changing the storage layout of the bootloader, take care to ensure that there is no overlap between the memory space the bootloader expects to use, and the memory space the application or NVM system expects to use. For Silicon Labs EmberZNet Application Builder projects, the INTERNAL_STORAGE_SIZE_KB macro can be configured in the application to reserve space for the bootloader storage area. On 512 kB EFR32xG13 devices, this macro is by default set to 254 for applications using SimEE1, and 240 for applications using SimEE2. Note: This sample configuration will not use all available flash space for bootloader storage. As the memory layout may differ between different application projects, this bootloader project has a safe configuration that ensures that it doesn't overlap with any application sample configuration. This comes at the expense of leaving some unused flash space. Always make sure to configure your bootloader to use the same area for storage as is set aside by your application. If support for multiple storage slots is desired, the start address of the storage, configurable under \"Software Components->Platform->Bootloader->Storage->Bootloader Storage Slot Setup\", *must* be configured to provide the location for \"bootload info\", which is meta-information about the storage slots to tell the bootloader which storage slot to install the next firmware update from. See the \"Internal Storage Bootloader (multiple images)\" sample configuration for more information. See UG489: Gecko Bootloader User's Guide to learn more about how to configure the bootloader, configure storage layout, enable security features, etc.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.bootloader-storage-internal-single-512k.sample-apps/bootloader-storage-internal-single-512k/bootloader-storage-internal-single-512k.slcp","text":"Internal Storage Bootloader (single image on 512kB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x44000 (or 0x8044000 for device with 0x8000000 flash base), and have a size of 192 kB. This can be configured on the \"Storage\" tab.\nThis sample configuration works out-of-the-box with the \"Local Storage Bootloader\" option in Silicon Labs EmberZNet Application Builder projects as well as Bluetooth and Connect projects. The configuration is designed to be safe to use together with applications that use SimEE1, SimEE2, NVM3 or PStore as their NVM system. When changing the storage layout of the bootloader, take care to ensure that there is no overlap between the memory space the bootloader expects to use, and the memory space the application or NVM system expects to use.\nFor Silicon Labs EmberZNet Application Builder projects, the INTERNAL_STORAGE_SIZE_KB macro can be configured in the application to reserve space for the bootloader storage area. On 512 kB EFR32xG13 devices, this macro is by default set to 254 for applications using SimEE1, and 240 for applications using SimEE2.\nNote: This sample configuration will not use all available flash space for bootloader storage. As the memory layout may differ between different application projects, this bootloader project has a safe configuration that ensures that it doesn't overlap with any application sample configuration. This comes at the expense of leaving some unused flash space. Always make sure to configure your bootloader to use the same area for storage as is set aside by your application.\nIf support for multiple storage slots is desired, the start address of the storage, configurable under \"Software Components->Platform->Bootloader->Storage->Bootloader Storage Slot Setup\", *must* be configured to provide the location for \"bootload info\", which is meta-information about the storage slots to tell the bootloader which storage slot to install the next firmware update from. See the \"Internal Storage Bootloader (multiple images)\" sample configuration for more information.\nSee UG489: Gecko Bootloader User's Guide to learn more about how to configure the bootloader, configure storage layout, enable security features, etc.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/tflite_micro_hello_world/readme.md"],"description":"This application demonstrates a model trained to replicate a sine function.  The model is continuously fed with values ranging from 0 to 2pi, and the  output of the model is used to control the intensity of an LED.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.tflite_micro_hello_world.example/tflite_micro_hello_world/tflite_micro_hello_world.slcp","text":"Machine Learning - TensorFlow Lite Micro - Hello World","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates a model trained to replicate a sine function.  The model is continuously fed with values ranging from 0 to 2pi, and the  output of the model is used to control the intensity of an LED. \n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates how to get stereo PCM data from a MEMS microphone using the PDM interface. An interrupt is triggered when there is valid data in the PDM's hardware FIFO. The interrupt handler reads and translates the raw PCM data from the FIFO into left and...","id":"projectTemplate.compatibleSDK.series2/pdm/pdm_stereo_interrupt/SimplicityStudio/BRD4184A_EFR32BG22_pdm_stereo_interrupt.slsproj","text":"Platform - BRD4184A EFR32BG22 PDM Stereo Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates how to get stereo PCM data from a MEMS microphone using the PDM interface. An interrupt is triggered when there is valid data in the PDM's hardware FIFO. The interrupt handler reads and translates the raw PCM data from the FIFO into left and..."},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates how to get stereo PCM data from a MEMS microphone using the PDM interface. An LDMA transfer is triggered when there is valid data in the PDM's hardware FIFO. The LDMA transfers the raw PCM data from the FIFO to the ping-pong buffers. The mai...","id":"projectTemplate.compatibleSDK.series2/pdm/pdm_stereo_ldma/SimplicityStudio/BRD4184A_EFR32BG22_pdm_stereo_ldma.slsproj","text":"Platform - BRD4184A EFR32BG22 PDM Stereo LDMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates how to get stereo PCM data from a MEMS microphone using the PDM interface. An LDMA transfer is triggered when there is valid data in the PDM's hardware FIFO. The LDMA transfers the raw PCM data from the FIFO to the ping-pong buffers. The mai..."},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows how to blink an LED in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.blink_baremetal.example/blink_baremetal/blink_baremetal.slcp","text":"Platform - Blink Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED in a bare-metal configuration.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.blink_kernel_freertos.example/blink_kernel_freertos/blink_kernel_freertos.slcp","text":"Platform - Blink Kernel FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows how to blink an LED using a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.blink_kernel_micriumos.example/blink_kernel_micriumos/blink_kernel_micriumos.slcp","text":"Platform - Blink Kernel Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.blink_pwm_baremetal.example/blink_pwm_baremetal/blink_pwm_baremetal.slcp","text":"Platform - Blink PWM","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.iostream_eusart_baremetal.example/iostream_eusart_baremetal/iostream_eusart_baremetal.slcp","text":"Platform - I/O Stream EUSART Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet. \n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.iostream_eusart_kernel_micriumos.example/iostream_eusart_kernel_micriumos/iostream_eusart_kernel_micriumos.slcp","text":"Platform - I/O Stream EUSART on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet. \n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of UART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.iostream_usart_baremetal.example/iostream_usart_baremetal/iostream_usart_baremetal.slcp","text":"Platform - I/O Stream USART Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of UART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet. \n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.iostream_usart_kernel_micriumos.example/iostream_usart_kernel_micriumos/iostream_usart_kernel_micriumos.slcp","text":"Platform - I/O Stream USART on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet. \n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example,  some fake malicious executable code is copied to RAM and executed with the MPU disabled and  re-enabled to demonstrate its effectiveness.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.mpu_simple_baremetal.example/mpu_simple_baremetal/mpu_simple_baremetal.slcp","text":"Platform - MPU Simple","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example,  some fake malicious executable code is copied to RAM and executed with the MPU disabled and  re-enabled to demonstrate its effectiveness. \n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.nvm3_baremetal.example/nvm3_baremetal/nvm3_baremetal.slcp","text":"Platform - NVM3 Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_aead/readme.html"],"description":"This example project demonstrates the Authenticated Encryption with Associated Data (AEAD) API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.psa_crypto_aead.example/psa_crypto_aead/psa_crypto_aead.slcp","text":"Platform - PSA Crypto AEAD","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Authenticated Encryption with Associated Data (AEAD) API.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_asymmetric_key/readme.html"],"description":"This example project demonstrates the asymmetric key API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.psa_crypto_asymmetric_key.example/psa_crypto_asymmetric_key/psa_crypto_asymmetric_key.slcp","text":"Platform - PSA Crypto Asymmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the asymmetric key API.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_cipher/readme.html"],"description":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.psa_crypto_cipher.example/psa_crypto_cipher/psa_crypto_cipher.slcp","text":"Platform - PSA Crypto Cipher","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_dsa/readme.html"],"description":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.psa_crypto_dsa.example/psa_crypto_dsa/psa_crypto_dsa.slcp","text":"Platform - PSA Crypto DSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_ecdh/readme.html"],"description":"This example project demonstrates the ECDH key agreement API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.psa_crypto_ecdh.example/psa_crypto_ecdh/psa_crypto_ecdh.slcp","text":"Platform - PSA Crypto ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDH key agreement API.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_hash/readme.html"],"description":"This example project demonstrates the hash API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.psa_crypto_hash.example/psa_crypto_hash/psa_crypto_hash.slcp","text":"Platform - PSA Crypto Hash","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the hash API.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_kdf/readme.html"],"description":"This example project demonstrates the Key Derivation Function (KDF) API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.psa_crypto_kdf.example/psa_crypto_kdf/psa_crypto_kdf.slcp","text":"Platform - PSA Crypto KDF","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Key Derivation Function (KDF) API.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_mac/readme.html"],"description":"This example project demonstrates the Message Authentication Code (MAC) API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.psa_crypto_mac.example/psa_crypto_mac/psa_crypto_mac.slcp","text":"Platform - PSA Crypto MAC","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Message Authentication Code (MAC) API.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_symmetric_key/readme.html"],"description":"This example project demonstrates the symmetric key API.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.psa_crypto_symmetric_key.example/psa_crypto_symmetric_key/psa_crypto_symmetric_key.slcp","text":"Platform - PSA Crypto Symmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the symmetric key API.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_x509/readme.html"],"description":"This example project uses opaque ECDSA keys to implement the X.509 standard for certificates in Mbed TLS.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.psa_crypto_x509.example/psa_crypto_x509/psa_crypto_x509.slcp","text":"Platform - PSA Crypto X.509","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses opaque ECDSA keys to implement the X.509 standard for certificates in Mbed TLS.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/se_manager_key_provisioning/readme.html"],"description":"This example project demonstrates the key provisioning API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.se_manager_key_provisioning.example/se_manager_key_provisioning/se_manager_key_provisioning.slcp","text":"Platform - SE Manager Key Provisioning","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the key provisioning API of SE Manager.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/se_manager_se_firmware_upgrade/readme.html"],"description":"This example project demonstrates the SE firmware upgrade API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.se_manager_se_firmware_upgrade.example/se_manager_se_firmware_upgrade/se_manager_se_firmware_upgrade.slcp","text":"Platform - SE Manager SE Firmware Upgrade","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the SE firmware upgrade API of SE Manager.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/spidrv_master_baremetal/readme.html"],"description":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.spidrv_master_baremetal.example/spidrv_master_baremetal/spidrv_master_baremetal.slcp","text":"Platform - SPIDRV Master Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/spidrv_master_kernel_micriumos/readme.html"],"description":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.spidrv_master_kernel_micriumos.example/spidrv_master_kernel_micriumos/spidrv_master_kernel_micriumos.slcp","text":"Platform - SPIDRV Master on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/spidrv_slave_baremetal/readme.html"],"description":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.spidrv_slave_baremetal.example/spidrv_slave_baremetal/spidrv_slave_baremetal.slcp","text":"Platform - SPIDRV Slave Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":["file:/C:/Users/elenb/SimplicityStudio/SDKs/gecko_sdk/app/common/example/spidrv_slave_kernel_micriumos/readme.html"],"description":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.spidrv_slave_kernel_micriumos.example/spidrv_slave_kernel_micriumos/spidrv_slave_kernel_micriumos.slcp","text":"Platform - SPIDRV Slave on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.simple_button_baremetal.example/simple_button_baremetal/simple_button_baremetal.slcp","text":"Platform - Simple Button Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.simple_button_kernel_micriumos.example/simple_button_kernel_micriumos/simple_button_kernel_micriumos.slcp","text":"Platform - Simple Button on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.sleeptimer_wallclock_baremetal.example/sleeptimer_wallclock_baremetal/sleeptimer_wallclock_baremetal.slcp","text":"Platform - Sleeptimer Wallclock","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"mbedTLS AES example using hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.mbedtls_aescrypt.example/mbedtls_aescrypt/mbedtls_aescrypt.slcp","text":"Platform - mbedTLS AES","priority":9999999,"category":"SOFTWARE","toolTipText":"mbedTLS AES example using hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.mbedtls_ecdh.example/mbedtls_ecdh/mbedtls_ecdh.slcp","text":"Platform - mbedTLS ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This example uses hardware accelerators on the supported device to perform ECDSA digital signaturewith mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.mbedtls_ecdsa.example/mbedtls_ecdsa/mbedtls_ecdsa.slcp","text":"Platform - mbedTLS ECDSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators on the supported device to perform ECDSA digital signaturewith mbedTLS.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store up to two firmware update images at a time, in two storage slots. The storage slots are configured to start at address 0x2000 and 0x41000 of the SPI flash respectively, and have a size of 252 kB. This can be configured on the \"Storage\" tab. The \"bootload info\" meta-information, which tells the bootloader which storage slot to install the next firmware update from, is configured under \"Software Components->Platform->Bootloader->Storage->Bootloader Storage Slot Setup\" to be placed at address 0x0. The first storage slot is configured to start at address 0x2000 (8 kB) because the bootload info takes up 2 flash pages of 4 kB. See UG489: Gecko Bootloader User's Guide to learn more about how to configure the bootloader, configure storage layout, enable security features, etc.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.bootloader-storage-spiflash.sample-apps/bootloader-storage-spiflash/bootloader-storage-spiflash.slcp","text":"SPI Flash Storage Bootloader (multiple images)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store up to two firmware update images at a time, in two storage slots. The storage slots are configured to start at address 0x2000 and 0x41000 of the SPI flash respectively, and have a size of 252 kB. This can be configured on the \"Storage\" tab.\nThe \"bootload info\" meta-information, which tells the bootloader which storage slot to install the next firmware update from, is configured under \"Software Components->Platform->Bootloader->Storage->Bootloader Storage Slot Setup\" to be placed at address 0x0. The first storage slot is configured to start at address 0x2000 (8 kB) because the bootload info takes up 2 flash pages of 4 kB.\nSee UG489: Gecko Bootloader User's Guide to learn more about how to configure the bootloader, configure storage layout, enable security features, etc.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 1024 kB. This can be configured on the \"Storage\" tab. This sample configuration works out-of-the-box with the default sample configuration of the Zigbee OTA Client in EmberZNet sample apps. Note: If support for multiple storage slots is desired, the start address of the storage, configurable under \"Software Components->Platform->Bootloader->Storage->Bootloader Storage Slot Setup\", *must* be configured to provide the location for \"bootload info\", which is meta-information about the storage slots to tell the bootloader which storage slot to install the next firmware update from. See the \"SPI Flash Storage Bootloader (multiple images)\" sample configuration for more information. See UG489: Gecko Bootloader User's Guide to learn more about how to configure the bootloader, configure storage layout, enable security features, etc. Note: Please ensure that the external SPI Flash connected to the SoC is of size >= 1MB. This application needs an external SPI Flash of minimum size 1MB","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.bootloader-storage-spiflash-single-1024k.sample-apps/bootloader-storage-spiflash-single-1024k/bootloader-storage-spiflash-single-1024k.slcp","text":"SPI Flash Storage Bootloader (single image with slot size of 1024k)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 1024 kB. This can be configured on the \"Storage\" tab.\nThis sample configuration works out-of-the-box with the default sample configuration of the Zigbee OTA Client in EmberZNet sample apps.\nNote: If support for multiple storage slots is desired, the start address of the storage, configurable under \"Software Components->Platform->Bootloader->Storage->Bootloader Storage Slot Setup\", *must* be configured to provide the location for \"bootload info\", which is meta-information about the storage slots to tell the bootloader which storage slot to install the next firmware update from. See the \"SPI Flash Storage Bootloader (multiple images)\" sample configuration for more information.\nSee UG489: Gecko Bootloader User's Guide to learn more about how to configure the bootloader, configure storage layout, enable security features, etc.\nNote: Please ensure that the external SPI Flash connected to the SoC is of size >= 1MB. This application needs an external SPI Flash of minimum size 1MB\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 512 kB. This can be configured on the \"Storage\" tab. This sample configuration works out-of-the-box with the default sample configuration of the Zigbee OTA Client in EmberZNet sample apps. Note: If support for multiple storage slots is desired, the start address of the storage, configurable under \"Software Components->Platform->Bootloader->Storage->Bootloader Storage Slot Setup\", *must* be configured to provide the location for \"bootload info\", which is meta-information about the storage slots to tell the bootloader which storage slot to install the next firmware update from. See the \"SPI Flash Storage Bootloader (multiple images)\" sample configuration for more information. See UG489: Gecko Bootloader User's Guide to learn more about how to configure the bootloader, configure storage layout, enable security features, etc.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.bootloader-storage-spiflash-single.sample-apps/bootloader-storage-spiflash-single/bootloader-storage-spiflash-single.slcp","text":"SPI Flash Storage Bootloader (single image)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 512 kB. This can be configured on the \"Storage\" tab.\nThis sample configuration works out-of-the-box with the default sample configuration of the Zigbee OTA Client in EmberZNet sample apps.\nNote: If support for multiple storage slots is desired, the start address of the storage, configurable under \"Software Components->Platform->Bootloader->Storage->Bootloader Storage Slot Setup\", *must* be configured to provide the location for \"bootload info\", which is meta-information about the storage slots to tell the bootloader which storage slot to install the next firmware update from. See the \"SPI Flash Storage Bootloader (multiple images)\" sample configuration for more information.\nSee UG489: Gecko Bootloader User's Guide to learn more about how to configure the bootloader, configure storage layout, enable security features, etc.\n"},{"imageURL":"bundleentry://419.fwk1297694182/icons/projectNew.svg","supportDocuments":[],"description":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks.","id":"template.uc.com.silabs.sdk.stack.super:4.0.2._1642280594.bootloader-uart-xmodem.sample-apps/bootloader-uart-xmodem/bootloader-uart-xmodem.slcp","text":"UART XMODEM Bootloader","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks.\n"}],"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[{"futureCount":17,"anySelected":false,"id":0,"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":1,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":2,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":3,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":4,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":5,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":6,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":7,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":8,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":9,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":10,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":11,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":12,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":13,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":14,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":15,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true},{"futureCount":0,"anySelected":false,"id":16,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.ble:3.3.2.0_1465162874","parentId":0,"selected":true}],"title":"Bluetooth","parentId":0,"selected":false},{"futureCount":6,"anySelected":false,"id":1,"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.btMesh:2.2.2.0_1315601937","parentId":1,"selected":true},{"futureCount":0,"anySelected":false,"id":1,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.btMesh:2.2.2.0_1315601937","parentId":1,"selected":true},{"futureCount":0,"anySelected":false,"id":2,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.btMesh:2.2.2.0_1315601937","parentId":1,"selected":true},{"futureCount":0,"anySelected":false,"id":3,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.btMesh:2.2.2.0_1315601937","parentId":1,"selected":true},{"futureCount":0,"anySelected":false,"id":4,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.btMesh:2.2.2.0_1315601937","parentId":1,"selected":true},{"futureCount":0,"anySelected":false,"id":5,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.btMesh:2.2.2.0_1315601937","parentId":1,"selected":true}],"title":"Bluetooth Mesh","parentId":0,"selected":false},{"futureCount":8,"anySelected":false,"id":2,"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.stack.bootloader:2.0.0._-1171497375","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":1,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.stack.bootloader:2.0.0._-1171497375","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":2,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.stack.bootloader:2.0.0._-1171497375","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":3,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.stack.bootloader:2.0.0._-1171497375","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":4,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.stack.bootloader:2.0.0._-1171497375","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":5,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.stack.bootloader:2.0.0._-1171497375","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":6,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.stack.bootloader:2.0.0._-1171497375","parentId":2,"selected":true},{"futureCount":0,"anySelected":false,"id":7,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.stack.bootloader:2.0.0._-1171497375","parentId":2,"selected":true}],"title":"Bootloader","parentId":0,"selected":false},{"futureCount":35,"anySelected":false,"id":3,"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":1,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":2,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":3,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":4,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":5,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":6,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":7,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":8,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":9,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":10,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":11,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":12,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":13,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":14,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":15,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":16,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":17,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":18,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":19,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":20,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":21,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":22,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":23,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":24,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":25,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":26,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":27,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":28,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":29,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":30,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":31,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":32,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":33,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true},{"futureCount":0,"anySelected":false,"id":34,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.sdk.platform:4.0.2.0_-1512611510","parentId":3,"selected":true}],"title":"Platform","parentId":0,"selected":false},{"futureCount":9,"anySelected":false,"id":4,"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.flex:3.3.2.0_509846537","parentId":4,"selected":true},{"futureCount":0,"anySelected":false,"id":1,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.flex:3.3.2.0_509846537","parentId":4,"selected":true},{"futureCount":0,"anySelected":false,"id":2,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.flex:3.3.2.0_509846537","parentId":4,"selected":true},{"futureCount":0,"anySelected":false,"id":3,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.flex:3.3.2.0_509846537","parentId":4,"selected":true},{"futureCount":0,"anySelected":false,"id":4,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.flex:3.3.2.0_509846537","parentId":4,"selected":true},{"futureCount":0,"anySelected":false,"id":5,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.flex:3.3.2.0_509846537","parentId":4,"selected":true},{"futureCount":0,"anySelected":false,"id":6,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.flex:3.3.2.0_509846537","parentId":4,"selected":true},{"futureCount":0,"anySelected":false,"id":7,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.flex:3.3.2.0_509846537","parentId":4,"selected":true},{"futureCount":0,"anySelected":false,"id":8,"filters":[],"title":"com.silabs.sdk.stack.super:4.0.2._1642280594.com.silabs.stack.flex:3.3.2.0_509846537","parentId":4,"selected":true}],"title":"Proprietary","parentId":0,"selected":false}],"title":"Technology Type","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":1,"filters":[{"futureCount":75,"anySelected":false,"id":0,"filters":[],"title":"Gecko SDK Suite v4.0.2","parentId":1,"selected":false},{"futureCount":2,"anySelected":false,"id":1,"filters":[],"title":"Peripheral Examples","parentId":1,"selected":false}],"title":"Provider","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":2,"filters":[{"futureCount":2,"anySelected":false,"id":0,"filters":[],"title":"Evaluation","parentId":2,"selected":false},{"futureCount":2,"anySelected":false,"id":1,"filters":[],"title":"None Specified","parentId":2,"selected":false},{"futureCount":73,"anySelected":false,"id":2,"filters":[],"title":"PRODUCTION","parentId":2,"selected":false}],"title":"Quality","parentId":-1,"selected":false}],"totalCount":77}
